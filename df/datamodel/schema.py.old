#!/usr/bin/env python
'''
ATTENTION: THE FILE IS GENERATED AUTOMATICLY, DO NOT MODIFIY IT MANUALLY
'''
from base import Base
from sqlalchemy import Column, String, Integer, BigInteger, Boolean, Text, SmallInteger, Float, DateTime

def enum(start=0, *sequential):
    enums = dict(zip(sequential, range(start, len(sequential)+start)))
    return type('Enum', (), enums)
    
class basic_vender(Base):
    name = Column(String(128), nullable=False)
    code = Column(String(128), nullable=True)
    level = Column(SmallInteger, nullable=False)
    video_play_method = Column(String(128), nullable=True)
    video_play_package = Column(String(128), nullable=True)
    video_play_param = Column(String(512), nullable=True)
    pic_link = Column(String(1024), nullable=True)
    application_package = Column(String(512), nullable=True)
    status = Column(Integer, nullable=False, default=1)
    online = Column(SmallInteger, nullable=False, default=1)
    o_application_packages = Column(String(1024), nullable=True)
    video_play_version = Column(String(1024), nullable=True)
    aggregate_status = Column(Integer, nullable=False, default=1)
    pay_callback_url = Column(String(1024), nullable=True)
    public_key = Column(String(2048), nullable=True)
    private_key = Column(String(2048), nullable=True)
    vender_public_key = Column(String(2048), nullable=True)
    subscript = Column(String(1024), nullable=True)
    coupon_script = Column(String(1024), nullable=True)
    host = Column(String(1024), nullable=False)
    port = Column(SmallInteger, nullable=False)
    db_name = Column(String(256), nullable=False)
    url = Column(String(256), nullable=False)
    default_site = Column(String(255), nullable=False)

class vender_attr_mapping(Base):
    vender_id = Column(BigInteger, nullable=False, index=True)
    type = Column(String(100), nullable=False, index=True)
    self_attr_value = Column(String(256), nullable=True)
    mapping_attr_value = Column(String(256), nullable=True)

class oss_user(Base):
    name = Column(String(200), nullable=False)
    scope = Column(String(1024), nullable=True)
    convert_scope = Column(String(1024), nullable=True)
    staffId = Column(BigInteger, nullable=True, index=True)
    password = Column(String(1024), nullable=True)

class medias_update_record(Base):
    title = Column(String(250), nullable=True)
    media_id = Column(BigInteger, nullable=False, index=True)
    vender = Column(String(250), nullable=True)
    vender_status = Column(String(250), nullable=True)
    vender_online = Column(Integer, nullable=True)
    batch_user = Column(String(64), nullable=True)
    onoff_vender = Column(String(64), nullable=True)
    category_name = Column(String(256), nullable=True)
    child_category_name = Column(String(1024), nullable=True)
    summary = Column(Text, nullable=True)
    operator = Column(String(128), nullable=True)
    vender_ids = Column(String(128), nullable=True)

class basic_category(Base):
    name = Column(String(128), nullable=False)
    parent_id = Column(BigInteger, nullable=True, index=True)
    is_series = Column(SmallInteger, nullable=True)
    is_collected = Column(SmallInteger, nullable=True)
    is_sync = Column(SmallInteger, nullable=False, index=True, default=1)

class basic_media(Base):
    title = Column(String(250), nullable=False, index=True)
    escape_title = Column(String(250), nullable=True)
    tag = Column(String(1024), nullable=True, default='')
    summary = Column(Text, nullable=True)
    definition = Column(String(128), nullable=True, default='')
    pubdate = Column(String(64), nullable=True, default='')
    rate = Column(Float, nullable=True, default=0.0)
    is_clip = Column(SmallInteger, nullable=True, default=0)
    is_3d = Column(SmallInteger, nullable=True, default=0)
    online = Column(Integer, nullable=True, default=0)
    available = Column(String(128), nullable=False, index=True, default='0')
    total = Column(Integer, nullable=True, default=0)
    current = Column(Integer, nullable=True, default=0)
    country = Column(String(256), nullable=True, default='')
    language = Column(String(512), nullable=True, default='')
    image_url = Column(String(1024), nullable=True)
    search_index = Column(Float, nullable=True, default=0.0)
    fee = Column(SmallInteger, nullable=True, index=True, default=0)
    sort_program = Column(SmallInteger, nullable=True, default=0)
    directors = Column(String(1024), nullable=True, default='')
    actors = Column(String(1024), nullable=True, default='')
    category_id = Column(String(255), nullable=True, index=True)
    child_category = Column(String(1024), nullable=True, default='')
    button_name = Column(String(128), nullable=True, index=True, default='')
    show_detail = Column(SmallInteger, nullable=True, index=True, default=1)
    is_4k = Column(SmallInteger, nullable=False, default=0)
    show_horizontal_image = Column(SmallInteger, nullable=False, default=0)
    audit_status = Column(SmallInteger, nullable=False, default=1000)
    source_type = Column(SmallInteger, nullable=False, default=0)
    locked_fields = Column(String(1024), nullable=False)
    site_status = Column(String(255), nullable=False, index=True)
    description = Column(String(1024), nullable=False)
    tvod_info = Column(String(1024), nullable=True, default='')
    vip_id = Column(String(1024), nullable=True, default='')
    hot_flag = Column(SmallInteger, nullable=True, default=0)
    sohu_flag = Column(SmallInteger, nullable=True, default=0)
    horizontal_image_url = Column(String(1024), nullable=True)
    is_sync = Column(SmallInteger, nullable=False, index=True, default=1)

class basic_program(Base):
    media_id = Column(BigInteger, nullable=True, index=True)
    title = Column(String(250), nullable=False)
    series = Column(BigInteger, nullable=True, default=0)
    current = Column(Integer, nullable=True, default=0)
    total = Column(Integer, nullable=True, default=0)
    language = Column(String(64), nullable=True, default='')
    time_length = Column(Integer, nullable=True, default=0)
    vender_id = Column(SmallInteger, nullable=False, index=True)
    video_play_url = Column(String(512), nullable=True, default='')
    video_quality = Column(String(64), nullable=True, default='31')
    fee = Column(SmallInteger, nullable=True, default=0)
    video_play_param = Column(String(4096), nullable=True, default='')
    image_url = Column(String(1024), nullable=True, default='')
    ref_media_source_id = Column(String(40), nullable=False, index=True, default='')
    ref_parent_media_source_id = Column(String(64), nullable=True, index=True, default='')
    ref_program_source_id = Column(String(64), nullable=True, index=True, default='')
    pubdate = Column(String(200), nullable=True)
    ptype = Column(SmallInteger, nullable=True, default=0)
    sub_title = Column(String(256), nullable=True, default='')
    horizontal_image_url = Column(String(1024), nullable=True)
    audit_status = Column(SmallInteger, nullable=False, default=1000)
    source_type = Column(SmallInteger, nullable=False, default=0)
    locked_fields = Column(String(1024), nullable=False)
    pubdate = Column(String(64), nullable=True, default='')
    try_flag = Column(SmallInteger, nullable=True, default=0)

class audit(Base):
    editor = Column(String(250), nullable=False)
    auditor = Column(String(250), nullable=True)
    parent_table = Column(String(64), nullable=False)
    parent_id = Column(BigInteger, nullable=True)
    audit_table = Column(String(64), nullable=False)
    action_type = Column(SmallInteger, nullable=False)
    content_id = Column(BigInteger, nullable=True)
    destination = Column(Text, nullable=True)
    content = Column(Text, nullable=True)
    content_original = Column(Text, nullable=True)
    content_title = Column(String(250), nullable=True, default='')
    desc_edit = Column(String(250), nullable=True, default='')
    desc_audit = Column(String(250), nullable=True, default='')
    review_status = Column(SmallInteger, nullable=False, default=1)
    audit_status = Column(SmallInteger, nullable=False, default=0)
    review_time = Column(BigInteger, nullable=False, index=True)
    audit_time = Column(BigInteger, nullable=False, index=True)
    device_id = Column(String(250), nullable=False, default='')
    result = Column(Text, nullable=True)

class site_system(Base):
    url = Column(String(1024), nullable=False)
    name = Column(String(256), nullable=False)
    if_version = Column(SmallInteger, nullable=False, default=0)
    if_version_lock = Column(SmallInteger, nullable=False, default=0)

class rule_vender(Base):
    vender = Column(String(1024), nullable=False)
    action_type = Column(String(1024), nullable=False)
    source_type = Column(String(1024), nullable=False)
    allow = Column(SmallInteger, nullable=False)
    description = Column(String(1024), nullable=False)

class rule_media(Base):
    vender_id = Column(BigInteger, nullable=False, index=True)
    media_id = Column(BigInteger, nullable=False, index=True)
    allow = Column(SmallInteger, nullable=False)

class import_history(Base):
    vender_id = Column(BigInteger, nullable=False, index=True)
    media_id = Column(BigInteger, nullable=False, index=True)
    media_title = Column(String(250), nullable=False)
    ref_media_source_id = Column(String(40), nullable=False, default='')
    username = Column(String(128), nullable=False, index=True)
    action = Column(SmallInteger, nullable=False)

class hot_media(Base):
    vender_id = Column(BigInteger, nullable=False, index=True)
    ref_media_source_id = Column(String(40), nullable=False, index=True)
    node_id = Column(String(40), nullable=True)
    media_id = Column(BigInteger, nullable=True, index=True)
    schedule = Column(String(250), nullable=True)
    finished = Column(String(40), nullable=True, index=True, default='0')

class oss_operation_history(Base):
    resource_type = Column(BigInteger, nullable=False, index=True)
    resource_id = Column(BigInteger, nullable=False, index=True)
    resource_title = Column(String(250), nullable=False)
    username = Column(String(128), nullable=False, index=True)
    action = Column(SmallInteger, nullable=False)

class resource_site_status_rel(Base):
    resource_type = Column(String(128), nullable=False, index=True)
    resource_id = Column(BigInteger, nullable=False, index=True)
    site_id = Column(BigInteger, nullable=False, index=True)
    online = Column(SmallInteger, nullable=False, index=True)

class basic_liveshow(Base):
    sourceId = Column(String(64), nullable=False, index=True)
    vender_id = Column(Integer, nullable=False, index=True)
    title = Column(String(250), nullable=False)
    subTitle = Column(String(250), nullable=False)
    remark = Column(String(512), nullable=False)
    desc = Column(String(1024), nullable=False)
    pic1 = Column(String(1024), nullable=False)
    pic2 = Column(String(1024), nullable=False)
    configPic = Column(String(1024), nullable=True)
    startTime = Column(Integer, nullable=False)
    endTime = Column(Integer, nullable=False)
    duration = Column(Integer, nullable=False)
    replayStartTime = Column(Integer, nullable=False)
    replayEndTime = Column(Integer, nullable=False)
    templet = Column(SmallInteger, nullable=False, default=0)
    video_play_param = Column(String(2048), nullable=False)
    escape_title = Column(String(250), nullable=False, index=True)
    fee = Column(SmallInteger, nullable=False)
    vip_id = Column(Integer, nullable=False)
    category_id = Column(Integer, nullable=False)
    category_name = Column(String(250), nullable=False)
    is_video = Column(SmallInteger, nullable=False)
    team_info = Column(String(2045), nullable=False)
    status = Column(SmallInteger, nullable=False, default=1)
    is_sync = Column(SmallInteger, nullable=False, index=True, default=1)
    site_status = Column(String(255), nullable=False, index=True)
    locked_fields = Column(String(1024), nullable=False)
    valid = Column(SmallInteger, nullable=False, default=1)

class basic_entertainer(Base):
    country = Column(String(128), nullable=True)
    origin_name = Column(String(128), nullable=True)
    stagename = Column(String(128), nullable=False, index=True)
    aka = Column(String(512), nullable=True)
    birthday = Column(String(64), nullable=True)
    biography = Column(Text, nullable=True)
    gender = Column(SmallInteger, nullable=True)
    career = Column(String(512), nullable=True)
    works = Column(Text, nullable=True)
    is_sync = Column(SmallInteger, nullable=False, index=True, default=1)

class update_history(Base):
    resource_type = Column(String(128), nullable=False, index=True)
    resource_id = Column(BigInteger, nullable=False, index=True)
    resource_title = Column(String(250), nullable=False, index=True)
    auto = Column(SmallInteger, nullable=True, index=True)
    action = Column(SmallInteger, nullable=False, index=True)
    is_success = Column(SmallInteger, nullable=False)
    error_type = Column(String(128), nullable=True)
    error_desc = Column(Text, nullable=True)

# following code is used to define the schemas
class SCHEMA(object) :
   schema_basic_vender = 1013
   schema_basic_category = 1017
   schema_basic_media = 1018
   schema_basic_program = 1020
   schema_vender_attr_mapping = 1026
   schema_oss_user = 1029
   schema_medias_update_record = 1032
   schema_audit = 1105
   schema_site_system = 1107
   schema_import_system = 1108
   schema_rule_vender = 1109
   schema_rule_media = 1110
   schema_import_history = 1111
   schema_hot_media = 1112
   schema_oss_operation_history = 1113
   schema_resource_site_status_rel = 1114
   schema_basic_liveshow = 1115
   schema_basic_entertainer = 1116
   schema_update_history = 1117
   schema_Basic_Media_new_media = 4004
   schema_Basic_Program_new_media = 4005
   schema_audit_manage = 4006
   schema_common_db_manage = 4007
   schema_preview_manage = 4008
   schema_hot_media_manage = 4009
   schema_liveshow_manage = 4010
   schema_import_media = 4011

# default table defined schemas dictionary
DEFAULT_SCHEMAS_DICT = set([
    SCHEMA.schema_basic_vender,
    SCHEMA.schema_vender_attr_mapping,
    SCHEMA.schema_oss_user,
    SCHEMA.schema_medias_update_record,
    SCHEMA.schema_basic_category,
    SCHEMA.schema_basic_media,
    SCHEMA.schema_basic_program,
    SCHEMA.schema_audit,
    SCHEMA.schema_site_system,
    SCHEMA.schema_rule_vender,
    SCHEMA.schema_rule_media,
    SCHEMA.schema_import_history,
    SCHEMA.schema_hot_media,
    SCHEMA.schema_oss_operation_history,
    SCHEMA.schema_resource_site_status_rel,
    SCHEMA.schema_basic_liveshow,
    SCHEMA.schema_basic_entertainer,
    SCHEMA.schema_update_history
])

# following code is used to define the data types
class DATATYPE(object):
    data_type_all_by_id = 2000
    data_type_all_by_title = 2016
    data_type_all_by_escape_title = 2017
    data_type_all_by_media_id = 2024
    data_type_all_by_ref_media_source_id = 2025
    data_type_all_by_ref_video_source_id = 2026
    data_type_all_by_ref_program_source_id = 2027
    data_type_all_by_ref_parent_media_source_id = 2028
    data_type_update_by_ref_media_source_id = 2029
    data_type_all_by_staffId = 2030
    data_type_all_by_username = 2031
    data_type_update_by_ref_parent_media_source_id = 2032
    data_type_update_by_ref_program_source_id = 2033
    data_type_query_all = 2054
    data_type_update_by_id = 2056
    data_type_insert_record = 2057
    data_type_del_by_id = 2058
    data_type_query_all_vender_list = 2110
    data_type_audit_pass = 3002
    data_type_audit_reject = 3003
    data_type_all_by_vender_id = 3005
    data_type_rule_media = 3006
    data_type_query_audit_media = 3007
    data_type_query_audit_basic_media = 3008
    data_type_count_audit_media = 3009
    data_type_query_program_info = 3010
    data_type_update_audit_status = 3011
    data_type_query_audit_by_mediaid = 3012
    data_type_query_available_media_for_rule = 3013
    data_type_media_pass = 3014
    data_type_media_reject = 3015
    data_type_query_media_with_ref_source_id = 3016
    data_type_query_available_media_for_hot_schedule = 3017
    data_type_query_hot_media_list = 3018
    data_type_finish_hot_media_schedule = 3019
    data_type_media_onoff_line_direct = 3020
    data_type_update_media_site_status = 3021
    data_type_query_by_source_id = 3022
    data_type_insert_record = 3023
    data_type_update_by_id = 3024
    data_type_list_liveshow = 3025
    data_type_by_showId = 3026
    data_type_delete_by_id = 3027
    data_type_query_duration_liveshow = 3028
    data_type_update_status_by_source_id = 3029
    data_type_import_media_update_parent = 3030
    data_type_import_media_offline = 3031
    data_type_import_media_update = 3032
    data_type_import_media_add = 3033
    data_type_import_media_add_child = 3034
    data_type_import_entertainer_add = 3035
    data_type_sync_media_site_status = 3036
    data_type_query_basic_category_all = 3037
    data_type_attr_mapping_by_vender_id_category = 3038
    data_type_liveshow_sport_category = 3039
    data_type_query_media_preview_pic_url = 3040


cache_policy = {

}

def get_cache_policy(schema, data_type):
    return cache_policy.get("%s::%s"%(schema, data_type), None)